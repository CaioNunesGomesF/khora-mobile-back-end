generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model conquista {
  id             String           @id @db.Uuid
  nome           String           @unique @db.VarChar
  descricao      String
  icone_url      String?          @db.VarChar
  user_conquista user_conquista[]
}

model doenca {
  id          String        @id @db.Uuid
  nome        String        @unique @db.VarChar
  user_doenca user_doenca[]
}

model habito {
  id               String             @id @db.Uuid
  nome             String             @unique @db.VarChar
  descricao        String?
  categoria        String?            @db.VarChar
  progresso_habito progresso_habito[]
}

model perfil_usuario {
  id              String    @id @db.Uuid
  user_id         String    @unique @db.Uuid
  data_nascimento DateTime? @db.Date
  altura_cm       Int?
  peso_kg         Decimal?  @db.Decimal(5, 2)
  genero          String?   @db.VarChar
  user            user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model progresso_habito {
  id                  String    @id @db.Uuid
  user_id             String    @db.Uuid
  habito_id           String    @db.Uuid
  data_inicio         DateTime  @default(now()) @db.Timestamp(6)
  meta_pessoal        String?
  ultima_recaida      DateTime? @db.Date
  custo_diario_habito Decimal?  @db.Decimal(10, 2)
  habito              habito    @relation(fields: [habito_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user                user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id               String             @id @db.Uuid
  name             String             @db.VarChar
  email            String             @unique @db.VarChar
  password_hash    String             @db.VarChar
  created_at       DateTime           @default(now()) @db.Timestamp(6)
  perfil_usuario   perfil_usuario?
  progresso_habito progresso_habito[]
  user_conquista   user_conquista[]
  user_doenca      user_doenca[]
  avaliacoes       avaliacao_conteudo[]
}

model user_conquista {
  id             String    @id @db.Uuid
  user_id        String    @db.Uuid
  conquista_id   String    @db.Uuid
  data_conquista DateTime  @default(now()) @db.Timestamp(6)
  conquista      conquista @relation(fields: [conquista_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user           user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([user_id, conquista_id], map: "user_conquista_user_id_conquista_id_idx")
}

model user_doenca {
  user_id   String @db.Uuid
  doenca_id String @db.Uuid
  doenca    doenca @relation(fields: [doenca_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user      user   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([user_id, doenca_id])
}

model categoria_conteudo {
  id          String     @id @default(uuid()) @db.Uuid
  nome        String     @unique @db.VarChar(100)
  descricao   String?
  icone_url   String?    @db.VarChar(500)
  cor_hex     String?    @db.VarChar(7)
  ordem       Int        @default(0)
  ativo       Boolean    @default(true)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @updatedAt @db.Timestamp(6)
  conteudos   conteudo[]
}

model tipo_conteudo {
  id         String     @id @default(uuid()) @db.Uuid
  nome       String     @unique @db.VarChar(50) // ARTIGO, VIDEO, INFOGRAFICO, PODCAST
  icone      String?    @db.VarChar(50)
  created_at DateTime   @default(now()) @db.Timestamp(6)
  conteudos  conteudo[]
}

model conteudo {
  id                 String             @id @default(uuid()) @db.Uuid
  titulo             String             @db.VarChar(200)
  descricao_curta    String             @db.VarChar(500)
  conteudo_completo  String?            @db.Text
  url_externa        String?            @db.VarChar(1000)
  thumbnail_url      String?            @db.VarChar(500)
  duracao_minutos    Int?
  nivel_dificuldade  String?            @db.VarChar(20) // BASICO, INTERMEDIARIO, AVANCADO
  autor              String?            @db.VarChar(100)
  fonte_credivel     String?            @db.VarChar(200)
  categoria_id       String             @db.Uuid
  tipo_conteudo_id   String             @db.Uuid
  visualizacoes      Int                @default(0)
  likes              Int                @default(0)
  ativo              Boolean            @default(true)
  destaque           Boolean            @default(false)
  created_at         DateTime           @default(now()) @db.Timestamp(6)
  updated_at         DateTime           @updatedAt @db.Timestamp(6)

  categoria          categoria_conteudo @relation(fields: [categoria_id], references: [id], onDelete: Cascade)
  tipo_conteudo      tipo_conteudo      @relation(fields: [tipo_conteudo_id], references: [id], onDelete: Cascade)

  tags               conteudo_tag[]
  avaliacoes         avaliacao_conteudo[]
}

model tag {
  id         String         @id @default(uuid()) @db.Uuid
  nome       String         @unique @db.VarChar(50)
  cor_hex    String?        @db.VarChar(7)
  created_at DateTime       @default(now()) @db.Timestamp(6)
  conteudos  conteudo_tag[]
}

model conteudo_tag {
  conteudo_id String   @db.Uuid
  tag_id      String   @db.Uuid
  conteudo    conteudo @relation(fields: [conteudo_id], references: [id], onDelete: Cascade)
  tag         tag      @relation(fields: [tag_id], references: [id], onDelete: Cascade)

  @@id([conteudo_id, tag_id])
}

model avaliacao_conteudo {
  id          String   @id @default(uuid()) @db.Uuid
  user_id     String   @db.Uuid
  conteudo_id String   @db.Uuid
  rating      Int      // 1-5
  comentario  String?  @db.Text
  created_at  DateTime @default(now()) @db.Timestamp(6)

  user        user     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  conteudo    conteudo @relation(fields: [conteudo_id], references: [id], onDelete: Cascade)

  @@unique([user_id, conteudo_id])
}
